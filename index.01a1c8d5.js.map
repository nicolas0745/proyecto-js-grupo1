{"mappings":"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","sources":["src/js/pagination.js"],"sourcesContent":["import { getTrending, fetchBySearch, fetchById } from './fetch-functions';\nimport { renderMovies, enableModal } from './functions';\nimport { selectedBySearch, string } from './index';\nimport { paginationLT } from './pagination-function';\n\nconst refs = {\n  listado: document.querySelector('.pagnumber'),\n  botonAtras: document.getElementById('atras'),\n  botonSiguiente: document.getElementById('siguiente'),\n  pageOne: document.getElementById('primera'),\n  pageFinal: document.getElementById('ultima'),\n};\n\nconst gallery = document.querySelector('.gallery');\n// const loader = document.querySelector('.dot-spinner');\nconst submit = document.querySelector('.btn');\n\nlet dataObject;\nlet totalResults;\nlet currentPage = 1;\nlet currentPage2 = 1;\nlet totalPag2 = 15;\nlet totalItems = 1000;\n\nasync function firstPagination() {\n  const data = await getTrending(2);\n  totalPag2 = data.total_pages;\n  totalItems = data.total_results;\n  const paginationResult = paginationLT(totalItems, 1);\n  renderPagination(paginationResult);\n}\n\nfirstPagination();\n\n// Función para renderizar los números de página en la interfaz\nfunction renderPagination(paginationArray) {\n  refs.listado.innerHTML = ''; // Limpiar contenido anterior\n  paginationArray.forEach(item => {\n    const link = document.createElement('button');\n    if (item === '...') {\n      link.textContent = '...';\n    } else {\n      link.textContent = item;\n      link.addEventListener('click', () => {\n        currentPage = item; // Actualizar la página actual al hacer clic en un número de página\n        //console.log('Página actual:', currentPage);\n        // Lógica para actualizar el contenido de acuerdo a la nueva página (ejemplo: fetch de datos)\n        // Luego, volver a renderizar la paginación\n\n        if (selectedBySearch == 0) {\n          const getTrendingMovies = async () => {\n            const data = await getTrending(currentPage);\n            if (data == undefined) return;\n            const { results: movies, total_pages } = data;\n            //console.log(data)\n\n            renderMovies(movies);\n\n            enableModal(false);\n\n            gallery.addEventListener('click', e => {\n              let movieId = e.target.id;\n\n              //tenemos el id de la imagen seleccionada\n              if (movieId != '') {\n                fetchMovieById(movieId);\n              }\n            });\n          };\n\n          getTrendingMovies();\n        } else {\n          totalResults = localStorage.getItem('total-results-from-search'); //toma de la memoria del navegador\n          dataObject = JSON.parse(totalResults); //convierto el string en objeto\n          renderPagination(paginationLT(dataObject, currentPage2));\n\n          async function renderPage() {\n            string.trim();\n            //console.log(string);\n            const data = await fetchBySearch(string, currentPage);\n            const { results: movies, total_pages } = data;\n            renderMovies(movies);\n            enableModal(true);\n            gallery.addEventListener('click', e => {\n              let movieId = e.target.id;\n              //tenemos el id de la imagen seleccionada\n              if (movieId != '') {\n                fetchMovieById(movieId);\n              }\n            });\n          }\n          renderPage();\n        }\n\n        const fetchMovieById = async id => {\n          const data = await fetchById(id);\n          // console.log(data);\n\n          const movieTitle = document.querySelector('.modal-title');\n          movieTitle.textContent = data.original_title.toUpperCase();\n          const results = document.querySelector('.results');\n          const review = document.querySelector('.abouttext');\n          const imgModal = document.querySelector('.img-modal');\n\n          let movieGen = [];\n          data.genres.forEach(element => {\n            movieGen.push(' ' + element.name);\n          });\n          results.innerHTML = `<li><span class=\"span\">${data.vote_average}</span> / ${data.vote_count}</li>\n                                    <li>${data.popularity}</li>\n                                    <li>${data.original_title}</li>\n                                    <li>${movieGen}</li>`;\n\n          review.textContent = data.overview;\n          imgModal.src = `https://image.tmdb.org/t/p/w200${data.poster_path}`;\n        };\n\n        const paginationResult = paginationLT(totalItems, currentPage);\n        renderPagination(paginationResult);\n      });\n    }\n    refs.listado.appendChild(link);\n\n    //console.log(link);\n  });\n}\n\nrenderPagination(paginationLT(totalItems, currentPage2));\n\n// Asignar eventos a los botones de \"Atrás\" y \"Siguiente\"\nrefs.botonAtras.addEventListener('click', () => {\n  if (currentPage > 1) {\n    currentPage--;\n    const paginationResult = paginationLT(totalItems, currentPage);\n    renderPagination(paginationResult);\n    //console.log(paginationResult)\n  }\n});\n\nrefs.botonSiguiente.addEventListener('click', () => {\n  if (currentPage < totalPag2) {\n    currentPage++;\n    const paginationResult = paginationLT(totalItems, currentPage);\n    renderPagination(paginationResult);\n    //console.log(paginationResult)\n  }\n});\n\n/* crear la funcion con total_results */\n\nsubmit.addEventListener('click', async e => {\n  e.preventDefault();\n  const data = await fetchBySearch(string, 1);\n  totalPag2 = data.total_pages;\n  totalItems = data.total_results;\n  const paginationResult = paginationLT(totalItems, 1);\n  renderPagination(paginationResult);\n});\n"],"names":["$br7ue","parcelRequire","$1bab9c519cfa82bc$var$refs","listado","document","querySelector","botonAtras","getElementById","botonSiguiente","pageOne","pageFinal","$1bab9c519cfa82bc$var$gallery","$1bab9c519cfa82bc$var$submit","$1bab9c519cfa82bc$var$dataObject","$1bab9c519cfa82bc$var$totalResults","$1bab9c519cfa82bc$var$currentPage","$1bab9c519cfa82bc$var$totalPag2","$1bab9c519cfa82bc$var$totalItems","$1bab9c519cfa82bc$var$renderPagination","paginationArray","innerHTML","forEach","item","link","createElement","textContent","addEventListener","$btpe3","selectedBySearch","async","data","getTrending","undefined","results","movies","total_pages","$gXu43","renderMovies","enableModal","e","movieId","target","id","fetchMovieById","getTrendingMovies","localStorage","getItem","JSON","parse","$fVT2F","paginationLT","string","trim","fetchBySearch","renderPage","fetchById","original_title","toUpperCase","review","imgModal","movieGen","genres","element","push","name","vote_average","vote_count","popularity","overview","src","poster_path","appendChild","total_results","$1bab9c519cfa82bc$var$firstPagination","preventDefault"],"version":3,"file":"index.01a1c8d5.js.map"}