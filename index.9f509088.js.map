{"mappings":"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","sources":["src/js/pagination.js"],"sourcesContent":["import { getTrending, fetchBySearch, fetchById } from './fetch-functions';\nimport { renderMovies, enableModal } from './functions';\nimport { selectedBySearch, string } from './index';\nimport { paginationLT } from './pagination-function';\n\nconst refs = {\n  listado: document.querySelector('.pagnumber'),\n  botonAtras: document.getElementById('atras'),\n  botonSiguiente: document.getElementById('siguiente'),\n  pageOne: document.getElementById('primera'),\n  pageFinal: document.getElementById('ultima'),\n};\n\nconst gallery = document.querySelector('.gallery');\n// const loader = document.querySelector('.dot-spinner');\nconst submit = document.querySelector('.btn');\n\nlet dataObject;\nlet totalResults;\nlet currentPage = 1;\nlet currentPage2 = 1;\nlet totalPag2 = 15;\nlet totalItems = 1000;\n\nasync function firstPagination() {\n  const data = await getTrending(2);\n  totalPag2 = data.total_pages;\n  totalItems = data.total_results;\n  const paginationResult = paginationLT(totalItems, 1);\n  renderPagination(paginationResult);\n}\n\nfirstPagination();\n\n// Función para renderizar los números de página en la interfaz\nfunction renderPagination(paginationArray) {\n  refs.listado.innerHTML = ''; // Limpiar contenido anterior\n  paginationArray.forEach(item => {\n    const link = document.createElement('button');\n    if (item === '...') {\n      link.textContent = '...';\n    } else {\n      link.textContent = item;\n      link.addEventListener('click', () => {\n        currentPage = item; // Actualizar la página actual al hacer clic en un número de página\n        //console.log('Página actual:', currentPage);\n        // Lógica para actualizar el contenido de acuerdo a la nueva página (ejemplo: fetch de datos)\n        // Luego, volver a renderizar la paginación\n\n        if (selectedBySearch == 0) {\n          const getTrendingMovies = async () => {\n            const data = await getTrending(currentPage);\n            if (data == undefined) return;\n            const { results: movies, total_pages } = data;\n            //console.log(data)\n\n            renderMovies(movies);\n\n            enableModal(false);\n\n            gallery.addEventListener('click', e => {\n              let movieId = e.target.id;\n\n              //tenemos el id de la imagen seleccionada\n              if (movieId != '') {\n                fetchMovieById(movieId);\n              }\n            });\n          };\n\n          getTrendingMovies();\n        } else {\n          totalResults = localStorage.getItem('total-results-from-search'); //toma de la memoria del navegador\n          dataObject = JSON.parse(totalResults); //convierto el string en objeto\n          renderPagination(paginationLT(dataObject, currentPage2));\n\n          async function renderPage() {\n            string.trim();\n            //console.log(string);\n            const data = await fetchBySearch(string, currentPage);\n            const { results: movies, total_pages } = data;\n            renderMovies(movies);\n            enableModal(true);\n            gallery.addEventListener('click', e => {\n              let movieId = e.target.id;\n              //tenemos el id de la imagen seleccionada\n              if (movieId != '') {\n                fetchMovieById(movieId);\n              }\n            });\n          }\n          renderPage();\n        }\n\n        const fetchMovieById = async id => {\n          const data = await fetchById(id);\n          // console.log(data);\n\n          const movieTitle = document.querySelector('.modal-title');\n          movieTitle.textContent = data.original_title.toUpperCase();\n          const results = document.querySelector('.results');\n          const review = document.querySelector('.abouttext');\n          const imgModal = document.querySelector('.img-modal');\n\n          let movieGen = [];\n          data.genres.forEach(element => {\n            movieGen.push(' ' + element.name);\n          });\n          results.innerHTML = `<li><span class=\"span\">${data.vote_average}</span> / ${data.vote_count}</li>\n                                    <li>${data.popularity}</li>\n                                    <li>${data.original_title}</li>\n                                    <li>${movieGen}</li>`;\n\n          review.textContent = data.overview;\n          imgModal.src = `https://image.tmdb.org/t/p/w200${data.poster_path}`;\n        };\n\n        const paginationResult = paginationLT(totalItems, currentPage);\n        renderPagination(paginationResult);\n      });\n    }\n    refs.listado.appendChild(link);\n\n    //console.log(link);\n  });\n}\n\nrenderPagination(paginationLT(totalItems, currentPage2));\n\n// Asignar eventos a los botones de \"Atrás\" y \"Siguiente\"\nrefs.botonAtras.addEventListener('click', () => {\n  if (currentPage > 1) {\n    currentPage--;\n    const paginationResult = paginationLT(totalItems, currentPage);\n    renderPagination(paginationResult);\n    //console.log(paginationResult)\n  }\n});\n\nrefs.botonSiguiente.addEventListener('click', () => {\n  if (currentPage < totalPag2) {\n    currentPage++;\n    const paginationResult = paginationLT(totalItems, currentPage);\n    renderPagination(paginationResult);\n    //console.log(paginationResult)\n  }\n});\n\n/* crear la funcion con total_results */\n\nsubmit.addEventListener('click', async e => {\n  e.preventDefault();\n  const data = await fetchBySearch(string, 1);\n  totalPag2 = data.total_pages;\n  totalItems = data.total_results;\n  const paginationResult = paginationLT(totalItems, 1);\n  renderPagination(paginationResult);\n});\n"],"names":["$dfaf77c789ce7a24$var$dataObject","$dfaf77c789ce7a24$var$totalResults","$bpxeT","parcelRequire","$dfaf77c789ce7a24$var$refs","listado","document","querySelector","botonAtras","getElementById","botonSiguiente","pageOne","pageFinal","$dfaf77c789ce7a24$var$gallery","$dfaf77c789ce7a24$var$submit","$dfaf77c789ce7a24$var$currentPage","$dfaf77c789ce7a24$var$totalPag2","$dfaf77c789ce7a24$var$totalItems","$dfaf77c789ce7a24$var$_firstPagination","$parcel$interopDefault","$2TvXO","mark","_callee","data","$baCzw","getTrending","_ctx","sent","total_pages","total_results","$dfaf77c789ce7a24$var$renderPagination","$YhboM","paginationLT","apply","this","arguments","paginationArray","innerHTML","forEach","item","link","createElement","textContent","addEventListener","$5TAx9","selectedBySearch","getTrendingMovies","movies","undefined","results","$cKDzr","renderMovies","enableModal","e","movieId","target","id","fetchMovieById","_renderPage","string","trim","fetchBySearch","localStorage","getItem","JSON","parse","renderPage","review","imgModal","movieGen","fetchById","original_title","toUpperCase","genres","element","push","name","concat","vote_average","vote_count","popularity","overview","src","poster_path","appendChild","$dfaf77c789ce7a24$var$firstPagination","preventDefault"],"version":3,"file":"index.9f509088.js.map"}